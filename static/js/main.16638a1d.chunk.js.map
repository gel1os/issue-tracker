{"version":3,"sources":["components/IssueBoard/IssueColumn.jsx","utils/DataStorage/LocalStorage.js","utils/DataStorage/DataStorage.js","utils/issue.js","Store.js","components/IssueBoard/IssueCard.jsx","components/shared/drag-n-drop/Drag.jsx","utils/useFilteredIssues.js","components/shared/NoIssuesMessage.jsx","components/shared/drag-n-drop/DropTarget.jsx","components/IssueBoard/IssueBoard.jsx","components/IssueList/IssueSection.jsx","components/IssueList/IssueItem.jsx","components/IssueList/IssueList.jsx","components/shared/fabs/Fab.jsx","components/shared/fabs/AddEditIssueFab.jsx","components/shared/dialogs/Dialog.jsx","utils/useInput.js","components/shared/dialogs/AddEditIssueDialog/AddEditIssueDialog.jsx","components/shared/DataSaver.jsx","App.jsx","index.js"],"names":["IssueColumn","props","status","amount","children","rest","className","LocalStorage","name","window","localStorage","getItem","data","setItem","DataStorageImpl","this","storage","get","save","statusesMap","open","pending","closed","statuses","isStatusDisabled","issueStatus","includes","Issue","title","description","createdAt","Date","now","id","Math","floor","random","predefinedIssues","Store","createContext","displayName","slices","issueData","JSON","parse","dataStorage","initialState","issues","map","dialog","opened","issue","rootReducer","state","action","type","payload","newValues","newIssue","filter","i","push","index","findIndex","slice","Object","keys","reduce","acc","prop","useStore","useContext","StoreProvider","useReducer","dispatch","store","useMemo","Provider","value","IssueCard","onClick","Drag","onDragStart","React","Children","child","cloneElement","draggable","useFilteredIssues","length","NoIssuesMessage","DropTarget","onDrop","canDrop","onDragOver","ev","preventDefault","IssueBoard","useState","setDraggable","empty","IssueSection","collapsed","setCollapsed","viewBox","aria-hidden","d","IssueItem","IssueList","Fab","AddEditIssueFab","Dialog","confirmation","closeDialog","e","stopPropagation","useInput","initialValue","setValue","reset","bind","onChange","event","target","AddEditIssueDialog","isEditMode","addAnother","setAddAnother","useEffect","formValues","trim","isConfirmDisabled","every","key","some","disabled","placeholder","rows","htmlFor","values","checked","DataSaver","view","stringify","App","setView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16638a1d.chunk.js","sourcesContent":["import './IssueColumn.css'\n\nconst IssueColumn = (props) => {\n  const {status, amount = 0, children, ...rest} = props;\n  return (\n    <div className=\"issue-column\" {...rest}>\n      <div className=\"issue-column_header\">{status} ({amount})</div>\n      <div className=\"issue-column_card-wrapper\">\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default IssueColumn;","export default class LocalStorage {\n  static get(name) {\n    return window.localStorage.getItem(name);\n  }\n\n  static save(name, data) {\n    window.localStorage.setItem(name, data);\n  }\n}","import LocalStorage from './LocalStorage';\n\nclass DataStorage {\n  constructor(DataStorageImpl) {\n    this.storage = DataStorageImpl;\n  }\n\n  get(name) {\n    return this.storage.get(name);\n  }\n\n  save(name, data) {\n    this.storage.save(name, data);\n  }\n}\n\nexport default new DataStorage(LocalStorage);","export const statusesMap = {\n  open: 'Open',\n  pending: 'Pending',\n  closed: 'Closed',\n}\n\nexport const statuses = [statusesMap.open, statusesMap.pending, statusesMap.closed];\n\nexport const isStatusDisabled = (status, issueStatus) => {\n  const disabledStatuses = {\n    [statusesMap.open]: [],\n    [statusesMap.pending]: [statusesMap.open],\n    [statusesMap.closed]: [statusesMap.open, statusesMap.pending]\n  }\n  return disabledStatuses[issueStatus].includes(status);\n}\n\nexport class Issue {\n  constructor({title, description, status, createdAt}) {\n    this.title = title || '';\n    this.description = description || '';\n    this.status = status || statusesMap.open;\n    this.createdAt = createdAt || Date.now();\n    this.id = Math.floor(Math.random() * 1000000 + 1)\n  }\n}\n\nexport const predefinedIssues = [\n  new Issue({\n    title: 'Implement add/edit of issue',\n    description: 'Need to creation and editing of issue',\n    status: statusesMap.closed\n  }),\n  new Issue({\n    title: 'Implement Board view',\n    description: 'Need to implement Board view',\n    status: statusesMap.closed\n  }),\n  new Issue({\n    title: 'Implement drag-n-drop for Board view',\n    description: 'Need to implement drag-n-drop for Board view',\n    status: statusesMap.closed\n  }),\n  new Issue({\n    title: 'Implement List view',\n    description: 'Need to implement List view',\n    status: statusesMap.closed\n  }),\n  new Issue({\n    title: 'Implement collapsing/expanding of sections for List view',\n    description: 'Need to implement collapsing/expanding of sections in List view',\n    status: statusesMap.closed\n  }),\n  new Issue({\n    title: 'Implement saving of issues and current view to local storage',\n    description: 'Need to implement saving of issues and current view to local storage',\n    status: statusesMap.closed\n  }),\n  new Issue({\n    title: 'Implement logic of issue status update according to requirements',\n    status: statusesMap.closed\n  }),\n  new Issue({\n    title: 'Check creation and editing of issues',\n    description: 'Need to check whether creation and editing of issues works',\n    status: statusesMap.open\n  }),\n  new Issue({\n    title: 'Check drag-n-drop in Board view',\n    description: 'Need to check whether drag-n-drop works',\n    status: statusesMap.open\n  }),\n  new Issue({\n    title: 'Check collapse/expand of sections in List view',\n    description: 'Need to check collapse/expand of sections works',\n    status: statusesMap.open\n  }),\n  new Issue({\n    title: 'Check saving of issues and view',\n    description: 'Need to check whether issues and view persists after page refresh',\n    status: statusesMap.open\n  }),\n];","import {createContext, useContext, useMemo, useReducer} from 'react';\nimport dataStorage from 'src/utils/DataStorage/DataStorage';\nimport {predefinedIssues, Issue} from 'src/utils/issue';\n\nconst combineReducers = (slices) => (state, action) =>\n  Object.keys(slices).reduce(\n    (acc, prop) => ({\n      ...acc,\n      [prop]: slices[prop](acc[prop], action),\n    }),\n    state\n  );\n\nconst Store = createContext();\nStore.displayName = 'Store';\n\nconst IssueReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ISSUE': {\n      const issue = new Issue(action.payload);\n      return { issues: [...state.issues, issue] };\n    }\n\n    case 'EDIT_ISSUE': {\n      const {issue, newValues} = action.payload;\n      const newIssue = new Issue({...issue, ...newValues});\n      let issues = [];\n\n      if (issue.status !== newIssue.status) {\n        issues = state.issues.filter((i) => i.id !== issue.id);\n        issues.push(newIssue);\n      } else {\n        const index = state.issues.findIndex((i) => i.id === issue.id);\n        issues = [\n          ...state.issues.slice(0, index),\n          newIssue,\n          ...state.issues.slice(index + 1)\n        ]\n      }\n\n      return { issues };\n    }\n    default:\n      return state;\n  }\n}\n\nconst DialogReducer = (state, action) => {\n  switch (action.type) {\n    case 'OPEN_DIALOG':\n      return {opened: true, issue: action.payload || null};\n    case 'CLOSE_DIALOG':\n      return {opened: false, issue: null};\n    default:\n      return state;\n  }\n}\n\nconst issueData = JSON.parse(dataStorage.get('issues'));\n\nconst initialState = {\n  issues: {\n    issues: issueData ? issueData.map(data => new Issue(data)) : predefinedIssues,\n  },\n  dialog: {\n    opened: false,\n    issue: null\n  }\n}\n\nconst rootReducer = combineReducers({\n  issues: IssueReducer,\n  dialog: DialogReducer\n});\n\nexport const useStore = () => useContext(Store);\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(rootReducer, initialState);\n  const store = useMemo(() => ({state, dispatch}), [state]);\n\n  return (\n    <Store.Provider value={store}>{children}</Store.Provider>\n  );\n};","import {useStore} from 'src/Store';\nimport './IssueCard.css'\n\nconst IssueCard = (props) => {\n  const {dispatch} = useStore();\n  const {issue, ...rest} = props;\n\n  return (\n    <div\n      {...rest}\n      className=\"issue-card\"\n      onClick={() => dispatch({type: 'OPEN_DIALOG', payload: issue})}\n    >\n      <div className=\"issue-card_title line-clamp\">{issue.title}</div>\n      <div className=\"issue-card_description line-clamp\">{issue.description}</div>\n    </div>\n  )\n}\n\nexport default IssueCard;","import React from 'react';\n\nconst Drag = ({onDragStart, children}) => {\n  return (\n    <>\n      {React.Children.map(children, child =>\n        React.cloneElement(child, {\n          draggable: true,\n          onDragStart\n        })\n      )}\n    </>\n  );\n}\n\nexport default Drag;","import {useMemo} from 'react';\n\nimport {statusesMap} from 'src/utils/issue';\nimport {useStore} from 'src/Store'\n\nconst useFilteredIssues = () => {\n  const {state} = useStore();\n  const {issues} = state.issues;\n\n  return useMemo(() => ({\n    [statusesMap.open]: issues.filter(issue => issue.status === statusesMap.open),\n    [statusesMap.pending]: issues.filter(issue => issue.status === statusesMap.pending),\n    [statusesMap.closed]: issues.filter(issue => issue.status === statusesMap.closed),\n    empty: !issues.length\n  }), [issues]);\n}\n\nexport default useFilteredIssues;","import './NoIssuesMessage.css';\n\nconst NoIssuesMessage = () => (\n  <div className=\"no-issues\">\n    <div>\n      There are no issues yet...\n    </div>\n    <div>\n      Use button below to add one.\n    </div>\n  </div>\n)\n\nexport default NoIssuesMessage","import React from 'react';\n\nconst DropTarget = ({onDrop, canDrop, children}) => {\n  const onDragOver = (ev) => {\n    if (!canDrop()) {\n      return;\n    }\n    ev.preventDefault();\n  }\n\n  return (\n    <>\n      {React.Children.map(children, child =>\n        React.cloneElement(child, {\n          onDragOver,\n          onDrop\n        }))}\n    </>\n  )\n}\n\nexport default DropTarget;","import {useState} from 'react';\nimport IssueColumn from './IssueColumn';\nimport IssueCard from './IssueCard';\nimport Drag from 'src/components/shared/drag-n-drop/Drag';\n\nimport {statuses, isStatusDisabled} from 'src/utils/issue';\nimport useFilteredIssues from 'src/utils/useFilteredIssues';\nimport NoIssuesMessage from 'src/components/shared/NoIssuesMessage';\nimport DropTarget from 'src/components/shared/drag-n-drop/DropTarget';\nimport {useStore} from 'src/Store'\nimport './IssueBoard.css';\n\nconst IssueBoard = () => {\n  const issues = useFilteredIssues();\n  const {dispatch} = useStore();\n\n  const [draggable, setDraggable] = useState(null);\n\n  if (issues.empty) {\n    return <NoIssuesMessage />\n  }\n\n  const onDrop = (status) => {\n    dispatch({\n      type: 'EDIT_ISSUE',\n      payload: {\n        issue: draggable,\n        newValues: {status}\n      }\n    })\n  }\n\n  const canDrop = (status) => {\n    return status !== draggable.status &&\n      !isStatusDisabled(status, draggable.status);\n  }\n\n  return (\n    <div className=\"issue-board\">\n      {statuses.map(status =>\n        <DropTarget\n          canDrop={() => canDrop(status)}\n          onDrop={() => onDrop(status)}\n          key={status}\n        >\n          <IssueColumn status={status} amount={issues[status].length}>\n            {issues[status].map((issue) =>\n              <Drag\n                key={issue.id}\n                onDragStart={() => setDraggable(issue)}\n              >\n                <IssueCard issue={issue}/>\n              </Drag>\n            )}\n          </IssueColumn>\n        </DropTarget>)}\n    </div>\n  )\n}\n\nexport default IssueBoard;","import {useState} from 'react';\nimport './IssueSection.css'\n\nconst IssueSection = ({status, amount = 0, children}) => {\n  const [collapsed, setCollapsed] = useState(false);\n  \n  const toggleCollapsed = () => {\n    setCollapsed(!collapsed);\n  }\n\n  return (\n    <div className={`issue-section ${collapsed ? 'collapsed' : ''}`}>\n      <div className=\"issue-section_header\">\n        <div className=\"issue-section_title\">{status} ({amount})</div>\n        {amount > 0 && \n          <svg className=\"issue-section_toggle\" onClick={toggleCollapsed} viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n            <path d=\"M10 17l5-5-5-5v10z\"></path>\n          </svg>\n        }\n      </div>\n      <div className=\"issue-section_item-wrapper\">\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default IssueSection;","import {useStore} from 'src/Store';\nimport './IssueItem.css'\n\nconst IssueItem = (props) => {\n  const {dispatch} = useStore();\n  const {issue} = props;\n\n  return (\n    <div className=\"issue-item\">\n      <div\n        className=\"issue-item_title\"\n        onClick={() => dispatch({type: 'OPEN_DIALOG', payload: issue})}\n      >\n        {issue.title}\n      </div>\n      <div className=\"issue-item_description\">{issue.description}</div>\n    </div>\n  )\n}\n\nexport default IssueItem;","import IssueSection from './IssueSection';\nimport IssueItem from './IssueItem';\n\nimport {statuses} from 'src/utils/issue';\nimport useFilteredIssues from 'src/utils/useFilteredIssues';\nimport NoIssuesMessage from 'src/components/shared/NoIssuesMessage';\nimport './IssueList.css';\n\nconst IssueList = () => {\n  const issues = useFilteredIssues();\n\n  if (issues.empty) {\n    return <NoIssuesMessage />\n  }\n\n  return (\n    <div className=\"issue-list\">\n      {statuses.map(status =>\n        <IssueSection key={status} status={status} amount={issues[status].length}>\n          {issues[status].map((issue) =>\n            <IssueItem key={issue.id} issue={issue}/>\n          )}\n        </IssueSection>\n      )}\n    </div>\n  )\n}\n\nexport default IssueList;","import './Fab.css';\n\nconst Fab = ({onClick}) => {\n  return (\n    <div className=\"fab\" onClick={onClick}>\n      <svg viewBox=\"0 0 24 24\">\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"></path>\n      </svg>\n    </div>\n  )\n}\n\nexport default Fab;","import Fab from './Fab';\nimport {useStore} from 'src/Store'\n\nconst AddEditIssueFab = () => {\n  const {dispatch} = useStore();\n  return <Fab onClick={() => dispatch({type: 'OPEN_DIALOG'})} />\n}\n\nexport default AddEditIssueFab;","import './Dialog.css';\nimport {useStore} from 'src/Store';\n\nconst Dialog = ({title, confirmation, children}) => {\n  const {state, dispatch} = useStore();\n  const {opened} = state.dialog;\n\n  if (!opened) {\n    return null;\n  }\n\n  const closeDialog = () => dispatch({type: 'CLOSE_DIALOG'})\n\n  return (\n    <>\n      <div className=\"dialog-wrapper\" onClick={closeDialog}>\n        <div className=\"dialog\" onClick={(e) => e.stopPropagation()}>\n          <h2 className=\"dialog_title\">{title}</h2>\n          <div className=\"dialog_content\">{children}</div>\n          <div className=\"dialog_actions\">\n            <button className=\"cancel\" onClick={closeDialog}>Cancel</button>\n            <button {...confirmation}>Confirm</button>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Dialog;","import {useState} from 'react';\n\nconst useInput = (initialValue) => {  \n  const [value, setValue] = useState(initialValue);\n  \n  return {\n    value,\n    setValue,\n    reset: () => setValue(''),\n    bind: {\n      value,\n      onChange: event => {        \n        setValue(event.target.value);\n      }\n    }\n  };\n};\n\nexport default useInput;","import {useState, useEffect} from 'react';\nimport Dialog from '../Dialog';\nimport {statusesMap, isStatusDisabled} from 'src/utils/issue'\nimport useInput from 'src/utils/useInput'\nimport {useStore} from 'src/Store';\nimport './AddEditIssueDialog.css'\n\nconst AddEditIssueDialog = () => {\n  const {state, dispatch} = useStore();\n  const {issue, opened} = state.dialog;\n  const isEditMode = !!issue;\n\n  const title = useInput('');\n  const description = useInput('');\n  const status = useInput(statusesMap.open);\n  const [addAnother, setAddAnother] = useState(false);\n\n  useEffect(() => {\n    if (isEditMode) {\n      title.setValue(issue.title);\n      description.setValue(issue.description);\n      status.setValue(issue.status);\n    }\n    return () => {\n      title.reset();\n      description.reset();\n      status.setValue(statusesMap.open);\n      setAddAnother(false);\n    }\n  }, [opened])\n\n  const formValues = {\n    title: title.value.trim(),\n    description: description.value.trim(),\n    status: status.value,\n  }\n\n  const onConfirm = () => {\n    if (isEditMode) {\n      dispatch({\n        type: 'EDIT_ISSUE',\n        payload: {issue, newValues: formValues}\n      });\n    } else {\n      dispatch({type: 'ADD_ISSUE', payload: formValues});\n    }\n\n    if (!addAnother) {\n      dispatch({type: 'CLOSE_DIALOG'})\n    } else {\n      title.reset();\n      description.reset();\n    }\n  }\n\n  const keys = Object.keys(formValues);\n  const isConfirmDisabled = isEditMode\n    ? keys.every((key) => formValues[key] === issue[key])\n    : keys.some((key) => !formValues[key])\n\n  return (\n    <Dialog\n      title={isEditMode ? \"Edit issue\" : \"Add issue\"}\n      confirmation={{\n        onClick: onConfirm,\n        disabled: isConfirmDisabled,\n      }}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Title\"\n        {...title.bind}\n      />\n      <textarea\n        placeholder=\"Description\"\n        rows=\"5\"\n        {...description.bind}\n      ></textarea>\n      <div>\n        <label htmlFor=\"status\">Status:</label>\n        <select name=\"status\" {...status.bind}>\n          {Object.values(statusesMap).map((status) =>\n            <option\n              key={status}\n              disabled={isEditMode ? isStatusDisabled(status, issue.status) : false}\n              value={status}\n            >{status}</option>\n          )}\n        </select>\n      </div>\n      <div className={`checkbox-wrapper ${isEditMode ? 'hidden' : ''}`}>\n        <label htmlFor=\"add-another\">Add another?</label>\n        <input\n          id=\"add-another\"\n          type=\"checkbox\"\n          name=\"add-another\"\n          checked={addAnother}\n          onChange={(e) => setAddAnother(e.target.checked)}/>\n      </div>\n    </Dialog>\n  )\n}\n\nexport default AddEditIssueDialog;","import {useEffect} from 'react';\nimport {useStore} from 'src/Store'\nimport dataStorage from 'src/utils/DataStorage/DataStorage';\n\nconst DataSaver = ({view}) => {\n  const {state} = useStore();\n  const {issues} = state.issues;\n\n  useEffect(() => {\n    dataStorage.save('issues', JSON.stringify(issues));\n  }, [issues]);\n\n  useEffect(() => {\n    dataStorage.save('view', view);\n  }, [view]);\n\n  return null;\n}\n\nexport default DataSaver;","import {useState} from 'react';\nimport IssueBoard from './components/IssueBoard/IssueBoard';\nimport IssueList from './components/IssueList/IssueList';\nimport AddEditIssueFab from './components/shared/fabs/AddEditIssueFab';\nimport AddEditIssueDialog from './components/shared/dialogs/AddEditIssueDialog/AddEditIssueDialog';\nimport DataSaver from './components/shared/DataSaver';\nimport {StoreProvider} from './Store';\nimport dataStorage from 'src/utils/DataStorage/DataStorage';\n\nconst App = () => {\n  const [view, setView] = useState(dataStorage.get('view') || 'board');\n\n  return (\n    <StoreProvider>\n      <header>\n        <h2>Issue tracker</h2>\n        <ul>\n          <li className={view === 'board' ? 'active' : ''}>\n            <button onClick={() => setView('board')}>Board</button>\n          </li>\n          <li className={view === 'list' ? 'active' : ''}>\n            <button onClick={() => setView('list')}>List</button>\n          </li>\n        </ul>\n      </header>\n      <main>\n        {view === 'board' && <IssueBoard />}\n        {view === 'list' && <IssueList />}\n        <AddEditIssueFab />\n        <AddEditIssueDialog />\n      </main>\n      <DataSaver view={view} />\n    </StoreProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}